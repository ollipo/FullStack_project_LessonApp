{"version":3,"sources":["components/LessonList.jsx","components/Login.jsx","services/lessons.js","reducers/lessonReducer.js","App.js","store.js","index.js"],"names":["LessonList","lessons","useSelector","state","Box","display","flexDirection","padding","justifyContent","Typography","to","style","textDecoration","color","variant","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","lesson","topic","contents","c","subject","content","students","s","name","class","date","duration","id","Login","useState","setLessons","alignItems","height","fontSize","letterSpacing","fontStyle","className","Avatar","backgroundColor","width","TextField","label","autoFocus","required","fullWidth","type","Button","onClick","paddingTop","axios","get","then","response","data","lessonReducer","action","App","dispatch","useDispatch","useEffect","a","lessonService","path","element","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5fb8158.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { \r\n    Box, Typography, TableContainer, Table, TableRow, TableCell, TableBody,\r\n    TableHead\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LessonList = () => {\r\n    const lessons = useSelector(state => state.lessons)\r\n    \r\n    return (\r\n        <Box display='flex' flexDirection='column' padding='20px'>\r\n            {// Displays logged in user and log out button\r\n            <Box display='flex' justifyContent='end' padding='20px'>\r\n                <Typography><i>User logged in</i></Typography>\r\n            </Box>\r\n            }\r\n            {// Displays lessons and create new lesson links\r\n            <Box display='flex' justifyContent='space-around' padding='20px'>\r\n                <Link to='/lessons' style={{textDecoration: 'none', color: '#8bc34a'}}>\r\n                    <Typography  variant='h5' ><i>Lessons</i></Typography>\r\n                </Link>\r\n                <Link to='/newlesson' style={{textDecoration: 'none', color: '#8bc34a'}}>\r\n                    <Typography  variant='h5'>Create new lesson</Typography>\r\n                </Link>\r\n            </Box>\r\n            }\r\n            {// Displays created lessons\r\n            <Box display='flex' justifyContent='flex-start' padding='20px'>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Topic</TableCell>\r\n                                <TableCell>Subject</TableCell>\r\n                                <TableCell>Content</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Class</TableCell>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>Duration</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {lessons.map(lesson =>\r\n                                <TableRow key={lesson.id}>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.topic}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.contents.map(c => c.subject)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.contents.map(c => c.content)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.students.map(s => s.name)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.students.map(s => s.class)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.date}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.duration}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n\r\n            \r\n                \r\n            }\r\n        </Box>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default LessonList","import { Avatar, Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport LessonList from \"./LessonList\";\r\n\r\nconst Login = () => {\r\n    const [lessons, setLessons] = useState(false)\r\n\r\n    if(lessons) {\r\n        return <LessonList />\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            height='100vh'\r\n            flexDirection='column'>\r\n            <Box\r\n                flexDirection='column'\r\n                display='flex'\r\n                alignItems='center'>\r\n                <Box\r\n                    fontSize='500%'\r\n                    letterSpacing='10px'\r\n                    fontStyle='italic'\r\n                    display='flex'\r\n                    flexDirection='row'\r\n                    className='lessons'>\r\n                    <Avatar\r\n                        variant='rounded'\r\n                        style= {{ \r\n                            backgroundColor: '#8bc34a',\r\n                            height:'20%',\r\n                            width: '6%'\r\n                        }}>\r\n                        <AssignmentIcon />\r\n                    </Avatar>\r\n                    Lessons\r\n                </Box>\r\n                <Box \r\n                    padding={2}\r\n                    height='25%'\r\n                    width='85%'>\r\n                    <Box>\r\n                        <TextField \r\n                            label='username'\r\n                            autoFocus\r\n                            required \r\n                            fullWidth\r\n                            className='username'\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <TextField \r\n                            label='password' \r\n                            type='password'\r\n                            required\r\n                            fullWidth\r\n                            className='password'\r\n                        />\r\n                    </Box>\r\n                    <Button \r\n                        className='submit-btn'\r\n                        variant='contained'\r\n                        onClick={()=>setLessons(true)}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                    <Box display='flex' justifyContent='center' paddingTop='20%'>\r\n                        <Button \r\n                            variant='contained'\r\n                            style= {{ backgroundColor: '#8bc34a' }}\r\n                        >\r\n                            create new user\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/lessons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll }","import lessonService from '../services/lessons'\r\n\r\nexport const initializeLessons = () => {\r\n    return async dispatch => {\r\n        const lessons = await lessonService.getAll()\r\n        dispatch({\r\n            type: 'INIT_LESSONS',\r\n            data: lessons\r\n        })\r\n    }\r\n}\r\n\r\nconst lessonReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n    case 'INIT_LESSONS':\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default lessonReducer","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Login from './components/Login';\nimport { \n  BrowserRouter as Router, Routes, Route\n} from 'react-router-dom'\nimport LessonList from './components/LessonList';\nimport { initializeLessons } from './reducers/lessonReducer';\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeLessons())\n  }, [])\n\n  return (\n\n    <Router>\n      <Routes>\n        <Route path='/' element={<Login />} />\n        <Route path='/lessons' element={<LessonList />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport lessonReducer from './reducers/lessonReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    lessons: lessonReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}