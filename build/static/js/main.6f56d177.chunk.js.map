{"version":3,"sources":["contents.js","components/DateAndTime.jsx","components/LessonForm.jsx","components/LessonList.jsx","components/Login.jsx","services/lessons.js","reducers/lessonReducer.js","App.js","store.js","index.js"],"names":["contents","content","tag","DateAndTime","useState","Date","selectedDate","handleDateChange","console","log","utils","DateFnsUtils","DateTimePicker","disableToolbar","variant","margin","autoOk","ampm","disableFuture","value","onChange","label","showTodayButton","format","minutesStep","defaultValues","topic","subject","students","name","class","date","duration","LessonForm","formValues","setFormValues","filteredContents","setFilteredContents","handleChange","event","target","filter","c","split","handleStudentsInputChange","onSubmit","preventDefault","Box","display","flexDirection","justifyContent","padding","TextField","id","autoFocus","required","fullWidth","className","FormControl","Select","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","sx","m","width","labelId","multiple","renderValue","selected","flexWrap","gap","map","Chip","RadioGroup","defaultValue","row","FormControlLabel","control","Radio","style","color","paddingTop","Button","type","LessonList","lessons","useSelector","state","Typography","to","textDecoration","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","lesson","s","Login","setLessons","alignItems","height","fontSize","letterSpacing","fontStyle","Avatar","backgroundColor","onClick","axios","get","then","response","data","lessonReducer","action","App","dispatch","useDispatch","useEffect","a","lessonService","path","element","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f56d177.chunk.js","sourcesContent":["export const contents = [ \r\n    {\r\n        content: 'computer games', \r\n        tag: 'maths'\r\n    },\r\n    {\r\n        content: 'reading in pairs',\r\n        tag: 'religion'\r\n    },\r\n    {\r\n        content: 'drawing letters to the white board',\r\n        tag: 'finnish'\r\n    },\r\n    {\r\n        content: 'rehearsing for a test', \r\n        tag: 'science'\r\n    },\r\n    {\r\n        content: 'multiplication exercises from a book',\r\n        tag: 'maths'\r\n    },\r\n    {\r\n        content: 'handouts with text and questions',\r\n        tag: 'finnish'\r\n    }\r\n]","import React, { useState } from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nfunction DateAndTime() {\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  console.log('selectedDateAndTime: ', selectedDate)\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <DateTimePicker\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        margin=\"normal\"\r\n        autoOk\r\n        ampm={false}\r\n        disableFuture\r\n        value={selectedDate}\r\n        onChange={handleDateChange}\r\n        label=\"24h clock\"\r\n        showTodayButton\r\n        format=\"MM/dd/yyyy HH:mm\"\r\n        minutesStep='5'\r\n      />\r\n  </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nexport default DateAndTime;","import React, { useState } from \"react\";\r\nimport { Button, Box, TextField, FormControl, Select, MenuItem, Chip, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\nimport { contents } from \"../contents\";\r\nimport DateAndTime from \"./DateAndTime\";\r\n\r\nconst defaultValues = {\r\n    topic: '',\r\n    contents: {\r\n        subject: '',\r\n        content: ''\r\n    },\r\n    students: {\r\n        name: '',\r\n        class: 0\r\n    },\r\n    date: '',\r\n    duration: ''\r\n}\r\nconsole.log('defaultValues: ', defaultValues)\r\n\r\nconst LessonForm = () => {\r\n    const [formValues, setFormValues] = useState(defaultValues)\r\n    const [filteredContents, setFilteredContents] = useState((contents))\r\n\r\n    console.log('formValues: ', formValues)\r\n    console.log('filteredContents: ', filteredContents)\r\n\r\n    const handleChange = (event) => {\r\n      const {\r\n        target: { name, value },\r\n      } = event;\r\n      console.log('name & value: ', name, value)\r\n      if(name === 'subject') {\r\n        if(value === 'maths') {\r\n            setFilteredContents(contents.filter(c => c.tag === 'maths'))\r\n            console.log('contents after if: ', contents)\r\n        }\r\n        else if(value === 'finnish') {\r\n            setFilteredContents(contents.filter(c => c.tag === 'finnish'))\r\n            console.log('contents after if: ', contents)\r\n        }\r\n        else if(value === 'religion') {\r\n            setFilteredContents(contents.filter(c => c.tag === 'religion'))\r\n            console.log('contents after if: ', contents)\r\n        }\r\n        else if(value === 'science') {\r\n            setFilteredContents(contents.filter(c => c.tag === 'science'))\r\n            console.log('contents after if: ', contents)\r\n        } else {\r\n            setFilteredContents(contents)\r\n            console.log('went to else')\r\n        }\r\n      }\r\n      setFormValues({\r\n          ...formValues,\r\n          contents: {\r\n              ...formValues.contents,\r\n              [name]: typeof value === 'string' ? value.split(',') : value\r\n          }\r\n      }\r\n      );\r\n    };\r\n\r\n    const handleTextInputChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        console.log('name & value: ', name, value)\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value\r\n        }\r\n        );\r\n      };\r\n\r\n      const handleStudentsInputChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        console.log('name & value: ', name, value)\r\n        setFormValues({\r\n            ...formValues,\r\n            students: {\r\n                ...formValues.students,\r\n                [name]: value\r\n            }\r\n        }\r\n        );\r\n      };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(formValues)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <Box display='flex' flexDirection='column'>\r\n                <Box display='flex' flexDirection='column' justifyContent='flex-start' padding='20px'>\r\n                    <Box padding='20px' >\r\n                        Topic\r\n                        <TextField \r\n                            id='topic-input'\r\n                            label=' '\r\n                            autoFocus\r\n                            required \r\n                            fullWidth\r\n                            className='topic'\r\n                            name='topic'\r\n                            onChange={handleTextInputChange}                            \r\n                        />\r\n                        <DateAndTime />\r\n                    </Box>\r\n                    <Box padding='20px' display='flex' flexDirection='column'>\r\n                        Subject\r\n                        <FormControl>\r\n                            <Select\r\n                                MenuProps={{\r\n                                    anchorOrigin: {\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"left\"\r\n                                    },\r\n                                    transformOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                    },\r\n                                    getContentAnchorEl: null\r\n                                }}\r\n                                value={formValues.contents.subject}\r\n                                onChange={handleChange}\r\n                                name='subject'\r\n                            >\r\n                                <MenuItem key='finnish' value='finnish'>\r\n                                    Finnish\r\n                                </MenuItem>\r\n                                <MenuItem key='maths' value='maths'>\r\n                                    maths\r\n                                </MenuItem>\r\n                                <MenuItem key='science' value='science'>\r\n                                    science\r\n                                </MenuItem>\r\n                                <MenuItem key='religion' value='religion'>\r\n                                    religion\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box padding='20px' display='flex' flexDirection='column'>\r\n                        Content\r\n                        <FormControl sx={{ m: 1, width: 300 }}>\r\n                            <Select\r\n                                MenuProps={{\r\n                                    anchorOrigin: {\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"left\"\r\n                                    },\r\n                                    transformOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                    },\r\n                                    getContentAnchorEl: null\r\n                                }}\r\n                                labelId=\"demo-multiple-chip-label\"\r\n                                id=\"demo-multiple-chip\"\r\n                                multiple\r\n                                name='content'\r\n                                value={formValues.contents.content ? formValues.contents.content : []}\r\n                                onChange={handleChange}\r\n                                renderValue={(selected) => (\r\n                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value} label={value} />\r\n                                    ))}\r\n                                    </Box>\r\n                                )}\r\n                                >\r\n                                {filteredContents.map((name) => (\r\n                                    <MenuItem\r\n                                        key={name.content}\r\n                                        value={name.content}\r\n                                    >\r\n                                        {name.content}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box padding='20px' display='flex' flexDirection='column'>\r\n                        <FormControl>\r\n                            Class\r\n                            <RadioGroup\r\n                                defaultValue='1'\r\n                                name='class'\r\n                                row\r\n                                onChange={handleStudentsInputChange}\r\n                            >\r\n                                <FormControlLabel value='1' control={<Radio style= {{color:'#8bc34a'}} /> } label='1' />\r\n                                <FormControlLabel value='2' control={<Radio style= {{color:'#8bc34a'}} /> } label='2' />\r\n                                <FormControlLabel value='3' control={<Radio style= {{color:'#8bc34a'}} /> } label='3' />\r\n                                <FormControlLabel value='4' control={<Radio style= {{color:'#8bc34a'}} /> } label='4' />\r\n                                <FormControlLabel value='5' control={<Radio style= {{color:'#8bc34a'}} /> } label='5' />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box padding='20px'>\r\n                        Student\r\n                        <TextField \r\n                            id='student-input'\r\n                            label=' '\r\n                            required \r\n                            fullWidth\r\n                            className='student'\r\n                            name='student'\r\n                            onChange={handleStudentsInputChange}\r\n                        />\r\n                    </Box>\r\n                    <Box padding='20px' display='flex' flexDirection='column'>\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box display='flex' justifyContent='center' paddingTop='20%'>\r\n                <Button variant='contained' type='submit'>\r\n                    Submit\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nexport default LessonForm","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { \r\n    Box, Typography, TableContainer, Table, TableRow, TableCell, TableBody,\r\n    TableHead\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LessonForm from \"./LessonForm\";\r\n\r\nconst LessonList = () => {\r\n    const lessons = useSelector(state => state.lessons)\r\n\r\n    return (\r\n        <>  \r\n        <LessonForm />\r\n        <Box display='flex' flexDirection='column' padding='20px'>\r\n            {// Displays logged in user and log out button\r\n            <Box display='flex' justifyContent='end' padding='20px'>\r\n                <Typography><i>User logged in</i></Typography>\r\n            </Box>\r\n            }\r\n            {// Displays lessons and create new lesson links\r\n            <Box display='flex' justifyContent='space-around' padding='20px'>\r\n                <Link to='/lessons' style={{textDecoration: 'none', color: '#8bc34a'}}>\r\n                    <Typography  variant='h5' ><i>Lessons</i></Typography>\r\n                </Link>\r\n                <Link to='/newlesson' style={{textDecoration: 'none', color: '#8bc34a'}}>\r\n                    <Typography  variant='h5'>Create new lesson</Typography>\r\n                </Link>\r\n            </Box>\r\n            }\r\n            {// Displays created lessons\r\n            <Box display='flex' justifyContent='flex-start' padding='20px'>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Topic</TableCell>\r\n                                <TableCell>Subject</TableCell>\r\n                                <TableCell>Content</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Class</TableCell>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>Duration</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {lessons.map(lesson =>\r\n                                <TableRow key={lesson.id}>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.topic}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.contents.map(c => c.subject)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.contents.map(c => c.content)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.students.map(s => s.name)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.students.map(s => s.class)}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.date}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <Typography>\r\n                                                {lesson.duration}\r\n                                            </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n            }\r\n        </Box>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LessonList","import { Avatar, Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport LessonList from \"./LessonList\";\r\n\r\nconst Login = () => {\r\n    const [lessons, setLessons] = useState(false)\r\n\r\n    if(lessons) {\r\n        return <LessonList />\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            height='100vh'\r\n            flexDirection='column'>\r\n            <Box\r\n                flexDirection='column'\r\n                display='flex'\r\n                alignItems='center'>\r\n                <Box\r\n                    fontSize='500%'\r\n                    letterSpacing='10px'\r\n                    fontStyle='italic'\r\n                    display='flex'\r\n                    flexDirection='row'\r\n                    className='lessons'>\r\n                    <Avatar\r\n                        variant='rounded'\r\n                        style= {{ \r\n                            backgroundColor: '#8bc34a',\r\n                            height:'20%',\r\n                            width: '6%'\r\n                        }}>\r\n                        <AssignmentIcon />\r\n                    </Avatar>\r\n                    Lessons\r\n                </Box>\r\n                <Box \r\n                    padding={2}\r\n                    height='25%'\r\n                    width='85%'>\r\n                    <Box>\r\n                        <TextField \r\n                            label='username'\r\n                            autoFocus\r\n                            required \r\n                            fullWidth\r\n                            className='username'\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <TextField \r\n                            label='password' \r\n                            type='password'\r\n                            required\r\n                            fullWidth\r\n                            className='password'\r\n                        />\r\n                    </Box>\r\n                    <Button \r\n                        className='submit-btn'\r\n                        variant='contained'\r\n                        onClick={()=>setLessons(true)}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                    <Box display='flex' justifyContent='center' paddingTop='20%'>\r\n                        <Button \r\n                            variant='contained'\r\n                            style= {{ backgroundColor: '#8bc34a' }}\r\n                        >\r\n                            create new user\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/lessons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll }","import lessonService from '../services/lessons'\r\n\r\nexport const initializeLessons = () => {\r\n    return async dispatch => {\r\n        const lessons = await lessonService.getAll()\r\n        dispatch({\r\n            type: 'INIT_LESSONS',\r\n            data: lessons\r\n        })\r\n    }\r\n}\r\n\r\nconst lessonReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n    case 'INIT_LESSONS':\r\n        return action.data\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default lessonReducer","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Login from './components/Login';\nimport { \n  BrowserRouter as Router, Routes, Route\n} from 'react-router-dom'\nimport LessonList from './components/LessonList';\nimport LessonForm from './components/LessonForm';\nimport { initializeLessons } from './reducers/lessonReducer';\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeLessons())\n  }, [])\n\n  return (\n\n    <Router>\n      <Routes>\n        <Route path='/' element={<Login />} />\n        <Route path='/lessons' element={<LessonList />} />\n        <Route path='/newlesson' element={<LessonForm />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport lessonReducer from './reducers/lessonReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    lessons: lessonReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}